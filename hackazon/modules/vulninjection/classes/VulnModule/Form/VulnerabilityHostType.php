<?php
/**
 * Created by IntelliJ IDEA.
 * User: Nikolay Chervyakov 
 * Date: 17.12.2014
 * Time: 15:45
 */


namespace VulnModule\Form;


use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\Form\FormInterface;
use Symfony\Component\Form\FormView;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;
use Symfony\Component\Validator\Constraints\NotBlank;

class VulnerabilityHostType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder->add('name', $options['edit_mode_enabled'] ? 'text' : 'hidden', [
            'attr' => ['class' => 'form-control input-miniature name-field js-name-field'],
            'label' => false,
            'error_bubbling' => true,
            'constraints' => [
                new NotBlank(['message' => "Name cannot be blank."])
            ]
        ]);

        $builder->add('vulnTree', 'vulnerable_element', [
            'cascade_validation' => $options['cascade_validation'],
            'edit_mode_enabled' => true, //options['edit_mode_enabled']
        ]);
    }

    public function finishView(FormView $view, FormInterface $form, array $options)
    {
        parent::finishView($view, $form, $options);
        $view->vars['edit_mode_enabled'] = $options['edit_mode_enabled'];
    }

    /**
     * @param OptionsResolverInterface|OptionsResolver $resolver
     */
    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults([
            'data_class' => 'VulnModule\Config\VulnerabilityHost',
            'edit_mode_enabled' => false
        ]);
    }

    public function getName()
    {
        return 'vulnerability_host';
    }
}