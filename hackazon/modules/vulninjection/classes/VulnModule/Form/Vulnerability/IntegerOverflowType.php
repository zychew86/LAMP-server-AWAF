<?php
/**
 * Created by IntelliJ IDEA.
 * User: Nikolay Chervyakov 
 * Date: 22.12.2014
 * Time: 14:57
 */


namespace VulnModule\Form\Vulnerability;


use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;
use Symfony\Component\Validator\Constraints\Choice;
use VulnModule\Form\VulnerabilityType;
use VulnModule\Vulnerability\IntegerOverflow;

class IntegerOverflowType extends VulnerabilityType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        parent::buildForm($builder, $options);

        $builder->add('returnTransform', 'choice', [
            'label' => 'On overflow',
            'required' => true,
            'choices' => IntegerOverflow::getReturnTransformsLabels(),
            'constraints' => [
                new Choice([
                    'choices' => IntegerOverflow::getAllowedReturnTransforms()
                ])
            ],
            'attr' => [
                'class' => 'form-control'
            ]
        ]);

        $builder->add('customValue', null, [
            'attr' => [
                'class' => 'form-control'
            ]
        ]);

        $builder->add('actionOnNotNumeric', 'choice', [
            'label' => 'Action if not a number',
            'required' => true,
            'choices' => IntegerOverflow::getNotNumericActionsLabels(),
            'constraints' => [
                new Choice([
                    'choices' => IntegerOverflow::getAllowedNotNumericActions()
                ])
            ],
            'attr' => [
                'class' => 'form-control',
            ]
        ]);
    }

    /**
     * @param OptionsResolverInterface|OptionsResolver $resolver
     */
    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults([
            'data_class' => 'VulnModule\\Vulnerability\\IntegerOverflow',
            'attr' => [
                'class' => 'form-inline',
                'data-controller-plugin' => 'integerOverflowVulnerability'
            ]
        ]);
    }

    public function getName()
    {
        return 'vuln_integer_overflow';
    }

    public function getParent()
    {
        return 'vulnerability';
    }
}